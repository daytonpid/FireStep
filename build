#! /bin/bash

echo -e "\nSTART\t: `pwd`/$0\t`date`"

function help() {
  echo "Build FireStep (non-Windows)"
  echo 
  echo "EXAMPLES:"
  echo "  ./build"
  echo
  echo "OPTIONS:"
  echo "  -h"
  echo "  --help"
  echo "     Print this help text"
}

while getopts "c:" flag
do
  case "$flag" in
    *) help ; exit 0;;
  esac
done

if [ ! -e ArduinoJson ]; then
	echo -e "ERROR\t: Installation incomplete"
    echo -e "TRY\t: scripts/install.sh"
    exit -1
fi

if [ "${FIREDUINO}" == "" ]; then
	export FIREDUINO=MOCK_MEGA2560
fi

if [ "${MEMORY_MODEL}" == "" ]; then
	export MEMORY_MODEL=MEMORY_MODEL_TINY
fi

if [ -e CMakeFiles ] ; then 
  echo "STATUS	: removing existing makefiles"
  rm -rf core CMakeCache.txt CMakeFiles CMakeFiles.txt target cmake_install.cmake CPackConfig.cmake CPackSourceConfig.cmake
  mkdir target
fi

echo "STATUS	: creating makefile"
cmake \
  -DCMAKE_INSTALL_PREFIX:PATH=$DESTDIR "$@" \
  .
RC=$?; if [ $RC -ne 0 ]; then
	echo "ERROR	: cmake failed (RC=$RC)"
	exit -1
fi
TAG=`git log --pretty=format:'%H' -n 1`
echo 'const char GIT_TAG[] PROGMEM = { "'$TAG'" };' > FireStep/git_tag.h
make
RC=$?; if [ $RC -ne 0 ]; then
	echo "ERROR	: make failed (RC=$RC)"
	exit -1
fi
mv FireStep/git_tag.h target
git checkout FireStep/git_tag.h

echo "----------------------------------"
echo -e "END\t: `pwd`/$0\t`date` (COMPLETE)"
